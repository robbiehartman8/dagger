version: '3.1'

networks:
  dagger:
    driver: bridge

services:
# identity
  server_read_identity:
    image: server_read_identity:latest
    hostname: server_read_identity
    container_name: server_read_identity
    ports:
      - "50052:50052"
    networks:
      - dagger

  server_create_update_identity:
    image: server_create_update_identity:latest
    hostname: server_create_update_identity
    container_name: server_create_update_identity
    ports:
      - "50051:50051"
    networks:
      - dagger

  server_appear_user_id_identity:
    image: server_appear_user_id_identity:latest
    hostname: server_appear_user_id_identity
    container_name: server_appear_user_id_identity
    ports:
      - "50054:50054"
    networks:
      - dagger
  
  server_delete_identity:
    image: server_delete_identity:latest
    hostname: server_delete_identity
    container_name: server_delete_identity
    ports:
      - "50053:50053"
    networks:
      - dagger    

# birthright
  server_read_birthright:
    image: server_read_birthright:latest
    hostname: server_read_birthright
    container_name: server_read_birthright
    ports:
      - "50055:50055"
    networks:
      - dagger  

  server_get_access_birthright:
    image: server_get_access_birthright:latest
    hostname: server_get_access_birthright
    container_name: server_get_access_birthright
    ports:
      - "50056:50056"
    networks:
      - dagger  

# odin
  odin_identity:
    image: odin_identity:latest
    hostname: odin_identity
    container_name: odin_identity
    networks:
      - dagger   

# services
  redis-stack:
    image: redis/redis-stack:latest
    hostname: redis-stack
    container_name: redis-stack
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - dagger

  zookeeper1:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888
    networks:
      - dagger

  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9001
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper1
    networks:
      - dagger